{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","isReversed","sortBy","preparedGoods","reverse","sort","good1","good2","localeCompare","length","startClick","setState","value","reset","className","this","type","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,OAAQ,I,EAGVC,cAAgB,WACd,MAAsC,EAAKL,MAAnCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,OACrBC,EAAuB,YAAOJ,GAMpC,OAJIE,GACFE,EAAcC,UAGRF,GACN,IAAK,WACH,OAAOC,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAClE,IAAK,SACH,OAAOJ,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAKrE,OAAON,G,EAGTO,WAAa,WACX,EAAKC,UAAS,SAAAb,GAAK,MAAK,CACtBE,WAAYF,EAAME,e,EAItBI,QAAU,WACR,EAAKO,UAAS,SAAAb,GAAK,MAAK,CAAEG,YAAaH,EAAMG,gB,EAG/CC,OAAS,SAACU,GACR,EAAKD,SAAS,CAAET,OAAQU,K,EAG1BC,MAAQ,WACN,EAAKF,SAAS,CACZV,YAAY,EACZC,OAAQ,M,4CAIZ,WAAU,IAAD,OACP,OACE,sBAAKY,UAAU,MAAf,UACE,wCACEC,KAAKjB,MAAME,WACX,wBACEc,UAAU,gCACVE,KAAK,SACLC,QAASF,KAAKL,WAHhB,mBAQDK,KAAKjB,MAAME,WACV,qCACE,6BACGe,KAAKZ,gBAAgBe,KAAI,SAAAC,GAAI,OAC5B,6BAAgBA,GAAPA,QAGb,wBACEL,UAAU,iCACVE,KAAK,SACLC,QAASF,KAAKX,QAHhB,qBAQA,wBACEU,UAAU,iCACVE,KAAK,SACLC,QAAS,kBAAM,EAAKf,OAAO,aAH7B,iCAQA,wBACEY,UAAU,iCACVE,KAAK,SACLC,QAAS,kBAAM,EAAKf,OAAO,WAH7B,4BAQA,wBACEY,UAAU,gCACVE,KAAK,SACLC,QAAS,kBAAM,EAAKJ,SAHtB,6B,GA7FMO,IAAMC,eA8GTxB,ICpIfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de380272.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nclass App extends React.PureComponent<Props, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isVisible: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  preparedGoods = () => {\n    const { goods, isReversed, sortBy } = this.state;\n    const preparedGoods: string[] = [...goods];\n\n    if (isReversed) {\n      preparedGoods.reverse();\n    }\n\n    switch (sortBy) {\n      case 'alphabet':\n        return preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      case 'length':\n        return preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      default:\n        break;\n    }\n\n    return preparedGoods;\n  };\n\n  startClick = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  sortBy = (value: string) => {\n    this.setState({ sortBy: value });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>Goods</h1>\n        {!this.state.isVisible && (\n          <button\n            className=\"app__button app__button-start\"\n            type=\"button\"\n            onClick={this.startClick}\n          >\n            Start\n          </button>\n        )}\n        {this.state.isVisible && (\n          <>\n            <ul>\n              {this.preparedGoods().map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n            <button\n              className=\"app__button app__button-action\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"app__button app__button-action\"\n              type=\"button\"\n              onClick={() => this.sortBy('alphabet')}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"app__button app__button-action\"\n              type=\"button\"\n              onClick={() => this.sortBy('length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"app__button app__button-reset\"\n              type=\"button\"\n              onClick={() => this.reset()}\n            >\n              Reset\n            </button>\n\n          </>\n\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}